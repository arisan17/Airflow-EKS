---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass 
metadata:
  name: trino-karpenter
spec:
  amiFamily: AL2
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 50Gi
        volumeType: gp3
        encrypted: true
        deleteOnTermination: true
  role: "${eks_cluster_id}-karpenter-node"
  subnetSelectorTerms:
    - tags:
        Name: "${eks_cluster_id}-private*"        # Name of the Subnets to spin up the nodes
  securityGroupSelectorTerms:                      # required, when not using launchTemplate
    - name: "${eks_cluster_id}-node*"           # name of the SecurityGroup to be used with Nodes
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    cat <<-EOF > /etc/profile.d/bootstrap.sh
    #!/bin/sh


    # Configure the NVMe volumes in RAID0 configuration in the bootstrap.sh call.
    # https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh#L35
    # This will create a RAID volume and mount it at /mnt/k8s-disks/0
    #   then mount that volume to /var/lib/kubelet, /var/lib/containerd, and /var/log/pods
    #   this allows the container daemons and pods to write to the RAID0 by default without needing PersistentVolumes
    export LOCAL_DISKS='raid0'
    EOF

    # Source extra environment variables in bootstrap script
    sed -i '/^set -o errexit/a\\nsource /etc/profile.d/bootstrap.sh' /etc/eks/bootstrap.sh

    --BOUNDARY--
  tags:
    KarpenerNodeClassName: "trino-karpenter"
    NodeType: "trino-eks-karpenter"
