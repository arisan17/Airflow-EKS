apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: basic-example-app-cluster-flink
spec:
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"
    # Autotuning parameters
    kubernetes.operator.job.autoscaler.autotune.enable: "true"
    kubernetes.operator.job.autoscaler.autotune.metrics.history.max.count: "2"
    kubernetes.operator.job.autoscaler.autotune.metrics.restart.count: "1"
    metrics.job.status.enable: TOTAL_TIME

    # Autoscaler parameters
    kubernetes.operator.job.autoscaler.enabled: "true"
    kubernetes.operator.job.autoscaler.scaling.enabled: "true"
    kubernetes.operator.job.autoscaler.stabilization.interval: "5s"
    kubernetes.operator.job.autoscaler.metrics.window: "1m"

    jobmanager.scheduler: adaptive
    # Replace with s3 bucket in your own account
    state.checkpoints.dir: s3://emr-flink-data/checkpoints
    state.savepoints.dir: s3://emr-flink-data/savepoints



  flinkVersion: v1_17
  # add service account
  # serviceAccount: flink-team-a-sa

  executionRoleArn: arn:aws:iam::681921237057:role/emr-eks-flink-flink-team-a-20240401212643803900000001
  emrReleaseLabel: "emr-7.0.0-flink-latest"
  jobManager:
    # Replace with s3 bucket in your own account
    storageDir: s3://emr-flink-data/data/basic-example-app-cluster/jobmanager
    resource:
      memory: "2048m"
      cpu: 1
  taskManager:
    resource:
      memory: "2048m"
      cpu: 1
  job:
    # if you have your job jar in S3 bucket you can use that path as well
    jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar
    parallelism: 2
    upgradeMode: savepoint
    savepointTriggerNonce: 0
  monitoringConfiguration:
    cloudWatchMonitoringConfiguration:
       logGroupName: LOG_GROUP_NAME
