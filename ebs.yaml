apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ebs-csi-node
  namespace: kube-system
  uid: caddc40c-a405-40a1-aab2-3a01ceaa09de
  resourceVersion: '385622'
  generation: 1
  creationTimestamp: '2023-03-17T23:54:37Z'
  labels:
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: EKS
    app.kubernetes.io/name: aws-ebs-csi-driver
    app.kubernetes.io/version: 1.16.1
  annotations:
    deprecated.daemonset.template.generation: '1'
  managedFields:
    - manager: eks
      operation: Apply
      apiVersion: apps/v1
      time: '2023-03-17T23:54:37Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
        f:spec:
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                f:app: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
            f:spec:
              f:affinity:
                f:nodeAffinity:
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ebs-plugin"}:
                  .: {}
                  f:args: {}
                  f:env:
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CSI_NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    f:failureThreshold: {}
                    f:httpGet:
                      f:path: {}
                      f:port: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    k:{"containerPort":9808,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    f:limits:
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:volumeMounts:
                    k:{"mountPath":"/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                k:{"name":"liveness-probe"}:
                  .: {}
                  f:args: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    f:limits:
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                  f:volumeMounts:
                    k:{"mountPath":"/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"node-driver-registrar"}:
                  .: {}
                  f:args: {}
                  f:env:
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DRIVER_REG_SOCK_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    f:limits:
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                  f:volumeMounts:
                    k:{"mountPath":"/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/registration"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:securityContext:
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccountName: {}
              f:tolerations: {}
              f:volumes:
                k:{"name":"device-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"kubelet-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"plugin-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"registration-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              f:maxUnavailable: {}
            f:type: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-03-18T22:22:14Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      subresource: status
  selfLink: /apis/apps/v1/namespaces/kube-system/daemonsets/ebs-csi-node
status:
  currentNumberScheduled: 4
  numberMisscheduled: 0
  desiredNumberScheduled: 4
  numberReady: 4
  observedGeneration: 1
  updatedNumberScheduled: 4
  numberAvailable: 4
spec:
  selector:
    matchLabels:
      app: ebs-csi-node
      app.kubernetes.io/name: aws-ebs-csi-driver
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ebs-csi-node
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/managed-by: EKS
        app.kubernetes.io/name: aws-ebs-csi-driver
        app.kubernetes.io/version: 1.16.1
    spec:
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
      containers:
        - name: ebs-plugin
          image: >-
            602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.16.1
          args:
            - node
            - '--endpoint=$(CSI_ENDPOINT)'
            - '--logging-format=text'
            - '--v=2'
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
            - name: CSI_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /dev
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
        - name: node-driver-registrar
          image: >-
            602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-node-driver-registrar:v2.7.0-eks-1-25-latest.2
          args:
            - '--csi-address=$(ADDRESS)'
            - '--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)'
            - '--v=2'
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
        - name: liveness-probe
          image: >-
            602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/livenessprobe:v2.9.0-eks-1-25-latest.2
          args:
            - '--csi-address=/csi/csi.sock'
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ebs-csi-node-sa
      serviceAccount: ebs-csi-node-sa
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
        fsGroup: 0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      schedulerName: default-scheduler
      tolerations:
        - operator: Exists
      priorityClassName: system-node-critical
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
      maxSurge: 0
  revisionHistoryLimit: 10
