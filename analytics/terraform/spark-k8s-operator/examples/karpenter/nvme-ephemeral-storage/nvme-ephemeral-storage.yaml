# Pre-requisite before running this job
# 1/ Open taxi-trip-execute.sh and update spark-46456683765720230306012636054000000001 , taxi-trip  and <REGION>
# 2/ Replace spark-46456683765720230306012636054000000001  and taxi-trip with your S3 bucket in this yaml
# 3/ execute taxi-trip-execute.sh

---
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: "taxi-trip"
  namespace: spark-team-a
  labels:
    app: "taxi-trip"
    applicationId: "taxi-trip-yunikorn"
    queue: root.test
spec:
  sparkUIOptions:
    servicePort: 4040
    servicePortName: taxi-trip-ui-svc
    serviceType: ClusterIP
    ingressAnnotations:
      kubernetes.io/ingress.class: nginx

  type: Python
  sparkVersion: "3.2.1"
  pythonVersion: "3"
  mode: cluster
  # Public docker image used from datamechanics/spark:3.2.1-hadoop-3.3.1-java-11-scala-2.12-python-3.8-latest and pushed to ECR repo
  image: "public.ecr.aws/r1l5w1y9/spark-operator:3.2.1-hadoop-3.3.1-java-11-scala-2.12-python-3.8-latest"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "s3a://spark-46456683765720230306012636054000000001/taxi-trip/scripts/pyspark-taxi-trip.py"  # MainFile is the path to a bundled JAR, Python, or R file of the application
  arguments:
    - "s3a://spark-46456683765720230306012636054000000001/taxi-trip/input/"
    - "s3a://spark-46456683765720230306012636054000000001/taxi-trip/output/"
  hadoopConf:
    "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.WebIdentityTokenCredentialsProvider"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "mapreduce.fileoutputcommitter.algorithm.version": "2"
  sparkConf:
    "spark.app.name": "taxi-trip"
    "spark.kubernetes.driver.pod.name": "taxi-trip"
    "spark.kubernetes.executor.podNamePrefix": "taxi-trip"
    "spark.local.dir": "/data1"
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.readahead.range": "256K"
    "spark.hadoop.fs.s3a.input.fadvise": "random"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"

    #Spark Event logs
    "spark.eventLog.enabled": "true"
    "spark.eventLog.dir": "s3a://spark-operator-doeks-spark-logs-20230516121726442300000008/spark-event-logs"
    "spark.eventLog.rolling.enabled": "true"
    "spark.eventLog.rolling.maxFileSize": "64m"
#    "spark.history.fs.eventLog.rolling.maxFilesToRetain": 100

    # Expose Spark metrics for Prometheus
    "spark.ui.prometheus.enabled": "true"
    "spark.executor.processTreeMetrics.enabled": "true"
    "spark.kubernetes.driver.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.driver.annotation.prometheus.io/path": "/metrics/executors/prometheus/"
    "spark.kubernetes.driver.annotation.prometheus.io/port": "4040"
    "spark.kubernetes.driver.service.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.driver.service.annotation.prometheus.io/path": "/metrics/driver/prometheus/"
    "spark.kubernetes.driver.service.annotation.prometheus.io/port": "4040"
    "spark.metrics.conf.*.sink.prometheusServlet.class": "org.apache.spark.metrics.sink.PrometheusServlet"
    "spark.metrics.conf.*.sink.prometheusServlet.path": "/metrics/driver/prometheus/"
    "spark.metrics.conf.master.sink.prometheusServlet.path": "/metrics/master/prometheus/"
    "spark.metrics.conf.applications.sink.prometheusServlet.path": "/metrics/applications/prometheus/"

  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  volumes:  # using NVMe instance storage mounted on /local1
    - name: spark-local-dir-1
      hostPath:
        path: /local1
        type: Directory

  driver:
    volumeMounts: # Points to InstanceStore 150GB NVMe SSD for shuffle spill over from memory
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    initContainers:
      - name: volume-permissions
        image: public.ecr.aws/y4g4v0z7/busybox
        command: [ 'sh', '-c', 'chown -R 185 /local1' ]
        volumeMounts:
          - mountPath: "/local1"
            name: "spark-local-dir-1"
    cores: 1
    memory: "4g"
    serviceAccount: spark-team-a
    labels:
      version: 3.2.1
    nodeSelector:
      NodeGroupType: "SparkComputeOptimized"
    tolerations:
      - key: "spark-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
  executor:
    podSecurityContext:
      fsGroup: 185
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    initContainers:
      - name: volume-permissions
        image: public.ecr.aws/y4g4v0z7/busybox
        command: [ 'sh', '-c', 'chown -R 185 /local1' ]
        volumeMounts:
          - mountPath: "/local1"
            name: "spark-local-dir-1"
    cores: 1
    instances: 4
    memory: "4g"
    serviceAccount: spark-team-a
    labels:
      version: 3.2.1
    nodeSelector:
      NodeGroupType: "SparkComputeOptimized"
    tolerations:
      - key: "spark-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
