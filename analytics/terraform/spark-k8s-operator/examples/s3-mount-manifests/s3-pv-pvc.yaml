# Sample TF code snippet for deploying a PV and PVC for S3 bucket

#---------------------------------------------------------------
# IRSA for Mountpoint for Amazon S3 CSI Driver
#---------------------------------------------------------------
# module "s3_csi_driver_irsa" {
#   source                = "terraform-aws-modules/iam/aws//modules/iam-role-for-service-accounts-eks"
#   version               = "~> 5.34"
#   role_name_prefix      = format("%s-%s-", local.name, "s3-csi-driver")
#   role_policy_arns = {
#     # WARNING: Demo purpose only. Bring your own IAM policy with least privileges
#     s3_csi_driver = "arn:aws:iam::aws:policy/AmazonS3FullAccess" 
#   }
#   oidc_providers = {
#     main = {
#       provider_arn               = module.eks.oidc_provider_arn
#       namespace_service_accounts = ["kube-system:s3-csi-driver-sa"]
#     }
#   }
#   tags = local.tags
# }

#---------------------------------------------------------------
# EKS Blueprints Addons
#---------------------------------------------------------------
# module "eks_blueprints_addons" {
#   source  = "aws-ia/eks-blueprints-addons/aws"
#   version = "~> 1.2"

#   cluster_name      = module.eks.cluster_name
#   cluster_endpoint  = module.eks.cluster_endpoint
#   cluster_version   = module.eks.cluster_version
#   oidc_provider_arn = module.eks.oidc_provider_arn

#   #---------------------------------------
#   # Amazon EKS Managed Add-ons
#   #---------------------------------------
#   eks_addons = {
#     aws-ebs-csi-driver = {
#       service_account_role_arn = module.ebs_csi_driver_irsa.iam_role_arn
#     }
#     coredns = {
#       preserve = true
#     }
#     vpc-cni = {
#       preserve = true
#     }
#     kube-proxy = {
#       preserve = true
#     }
#     aws-mountpoint-s3-csi-driver = {
#       service_account_role_arn = module.s3_csi_driver_irsa.iam_role_arn
#     }
#   }
# }

#---------------------------------------------------------------
# Once you deploy the IRSA and EKS Addon for S3 CSI driver, you can deploy the PV and PVC
# Update the manifest before applying it to the cluster
# update region in mountOptions and bucketName in volumeAttributes
#---------------------------------------------------------------

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-pv
spec:
  capacity:
    storage: 1200Gi # ignored, required
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  mountOptions:
    - uid=1000
    - gid=2000
    - allow-other
    - allow-delete
    - region <ENTER_REGION>
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume
    volumeAttributes:
      bucketName: <ENTER_S3_BUCKETNAME_ONLY>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-claim
  namespace: spark-team-a
spec:
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # required for static provisioning
  resources:
    requests:
      storage: 1200Gi # ignored, required
  volumeName: s3-pv

#---------------------------------------------------------------

