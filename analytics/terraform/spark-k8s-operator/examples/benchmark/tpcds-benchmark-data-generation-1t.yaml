# NOTE: This example requires the following prerequisites before executing the jobs
# 1. Ensure spark-team-a name space exists
# 2. replace <ENTER_YOUR_BUCKET_NAME> with your bucket name

---
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-data-generation-1t
  namespace: spark-team-a
spec:
  type: Scala
  pythonVersion: "3"
  sparkVersion: "3.1.2"
  mode: cluster
  image: ghcr.io/aws-samples/eks-spark-benchmark:3.1.2
  imagePullPolicy: Always
  mainClass: com.amazonaws.eks.tpcds.DataGeneration
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  arguments:
    # TPC-DS data location
    - "s3a://<ENTER_YOUR_BUCKET_NAME>/TPCDS-TEST-1T"
    # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
    # Data Format
    - "parquet"
    # Scale factor (in GB)
    - "1"
    # Generate data num partitions
    - "50"
    # Create the partitioned fact tables
    - "false"
    # Shuffle to get partitions coalesced into single files.
    - "false"
    # Logging set to WARN
    - "true"
  hadoopConf:
    # IRSA configuration
    "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.WebIdentityTokenCredentialsProvider"
    #    "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.InstanceProfileCredentialsProvider"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "mapreduce.fileoutputcommitter.algorithm.version": "2"
  sparkConf:
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    # S3 Configs
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.readahead.range": "256K"
    "spark.hadoop.fs.s3a.input.fadvise": "random"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "spark.sql.execution.arrow.pyspark.enabled": "true"

  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  volumes: # using NVMe instance storage mounted on /local1
    - name: spark-local-dir-1
      hostPath:
        path: /local1
        type: Directory
  driver:
    volumeMounts: # Points to InstanceStore NVMe SSD for shuffle spill over from memory
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    initContainers:
      - name: volume-permissions
        image: public.ecr.aws/y4g4v0z7/busybox
        command: [ 'sh', '-c', 'chown -R 185 /local1' ]
        volumeMounts:
          - mountPath: "/local1"
            name: "spark-local-dir-1"
    cores: 1
    memory: "10g"
    memoryOverhead: "2g"
    serviceAccount: spark-team-a
    labels:
      version: 3.1.1
    nodeSelector:
      NodeGroupType: "SparkMemoryOptimized"
    tolerations:
      - key: "spark-memory-optimized"
        operator: "Exists"
        effect: "NoSchedule"
  executor:
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    cores: 1
    instances: 100
    memory: "6g"
    memoryOverhead: "2g"
    serviceAccount: spark-team-a
    labels:
      version: 3.1.1
    nodeSelector:
      NodeGroupType: "SparkMemoryOptimized"
    tolerations:
      - key: "spark-memory-optimized"
        operator: "Exists"
        effect: "NoSchedule"
